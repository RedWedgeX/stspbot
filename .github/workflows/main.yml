name: Build and Deploy Docker Image

on:
  push:
    branches:
      - cicd-troubleshooting

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repo name
        id: set-repo-name
        run: echo "repo_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ghcr.io/${{ steps.set-repo-name.outputs.repo_name }}:latest

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy to Proxmox
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            # Unlock the container if it's locked
            sudo pct unlock ${{ secrets.VM_ID }} || true

            # Stop and destroy any existing container
            sudo qm stop ${{ secrets.VM_ID }} || true
            sudo qm destroy ${{ secrets.VM_ID }} || true

            # Clone the template to create a new container
            sudo pct clone ${{ secrets.TEMPLATE_ID }} ${{ secrets.VM_ID }} --full true

            # Set the hostname (optional)
            sudo pct set ${{ secrets.VM_ID }} --hostname badgey

            # Configure the network for the new container
            sudo pct set ${{ secrets.VM_ID }} --net0 name=eth0,bridge=vmbr1,ip=10.10.10.20/24,type=veth

            # Update the container's description
            sudo pct set ${{ secrets.VM_ID }} --description "Updated by GitHub Actions: \$(date)"

            # Bind mount the database file into the container
            sudo pct set ${{ secrets.VM_ID }} --mp0 /opt/badgey/data/db.sqlite,mp=/usr/src/app/db/db.sqlite

            # Start the container
            sudo pct start ${{ secrets.VM_ID }}

            # Wait for the container to be ready
            sleep 30

            # Pull the latest image into the container
            sudo pct exec ${{ secrets.VM_ID }} docker pull ghcr.io/${{ steps.set-repo-name.outputs.repo_name }}:latest

            # Stop and remove any existing Docker container in the Proxmox container
            sudo pct exec ${{ secrets.VM_ID }} docker stop badgey-app || true
            sudo pct exec ${{ secrets.VM_ID }} docker rm badgey-app || true

            # Run the new Docker container in the Proxmox container, passing environment variables
            sudo pct exec ${{ secrets.VM_ID }} docker run -d --restart=always --name badgey-app -e GEMINI_API=${GEMINI_API} -e TOKEN=${TOKEN} ghcr.io/${{ steps.set-repo-name.outputs.repo_name }}:latest

          EOF
        env:
          GEMINI_API: ${{ secrets.GEMINI_API }}
          TOKEN: ${{ secrets.TOKEN }}
